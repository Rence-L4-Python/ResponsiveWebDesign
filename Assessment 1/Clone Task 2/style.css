/*Defining elements, classes, and IDs for overall usage. This portion was first made with mobile devices in mind, using 360px as a base.*/
/*MOBILE SCREEN: 360px-720px*/
*{ /*Removing default margin and padding of all elements*/
    margin: 0;
    padding: 0;
}
/*Spacing variables based on specification*/
:root{
    --spacing-sm: 16px;
    --spacing-lg-mb: 16px;
    --spacing-lg-tb: 32px;
    --spacing-lg-dt: 48px;
}
html, body{
    height: 100%; /*Helps the design use the entire height of the page*/
    background-color: #231651;
    font-family: "Lato", sans-serif;
    color: #070410;
}
header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-sm);
    background-color: #4DCCBD;
    font-size: 2em;
}
nav{
    display: none;
}
h1{
    display: flex;
    align-items: center;
    text-align: center;
    font-family: "Teko", sans-serif;
    height: 3em;
}
main{
    max-width: 900px;
    margin: auto;
    padding-top: var(--spacing-lg-mb);
    padding-bottom: var(--spacing-lg-mb);
}
nav > a{
    text-decoration: none;
    color: #070410;
}
.card-container{
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-lg-mb);
}
article{
    padding: var(--spacing-sm);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
article p{
    margin-bottom: calc(var(--spacing-sm) * 2);
}
button{
    border: none;
    border-radius: var(--spacing-sm);
    outline: none;
    padding: var(--spacing-sm);
    background-color: #EEF36A;
    font-size: 2em;
    font-family: "Teko", sans-serif;
    font-weight: 500;
    width: 100%;
}
input{
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    border-radius: var(--spacing-sm);
    padding: var(--spacing-sm);
    outline: none;
    text-align: center;
    width: 9rem;
}
input::placeholder{ /*Only the placeholder text is affected, typing inside the searchbar results in the normal font size.*/
    font-size: 2em;
}
section{ /*This is used to group the contents inside the first card, since the flex-direction has to be changed to row with desktop screen sizes.*/
    display: flex;
    flex-direction: column;
    flex: 1;
}
.card{
    background-color: #FFFFFF;
    display: flex;
    flex-direction: column;
    font-size: 1.5em;
}
.card img{
    width: 100%; /*Uses full size of the images*/
}
.searchbar{
    display: flex;
    justify-content: center;
    align-items: center;
}
#logo{ /*Website logo*/
    display: flex;
    font-weight: 500;
    font-family: "Teko", sans-serif;
}
/*TARGET DEVICES BREAKPOINTS*/
/*TABLET SCREEN: 720px+*/
@media only screen and (min-width: 720px){
    header{
        box-shadow: 0 12px rgba(7, 4, 16, 0.3);
        font-size: 3em;
        height: 1em;
    }
    nav{
        display: flex;
        gap: var(--spacing-lg-tb);
        margin: var(--spacing-sm)
    }
    nav a{
        font-size: 1rem;
    }
    main{
        padding: var(--spacing-lg-tb);
    }
    button{
        position: relative;
        bottom: 0;
    }
    button p{
        text-align: center;
        display: flex;
        justify-content: center;
        margin: auto;
        width: 50%;
    }
    article, p{
        display: flex;
        flex-grow: 1;
    }
    .card-container{
        gap: var(--spacing-lg-tb); /*Adds the gap between the cards.*/
    }
    .card{ 
        flex: 1 1 calc(50% - var(--spacing-lg-tb)); /*Creates two columns, used to achieve the layout in the wireframe. The calc is used to add the gaps to the columns.*/
        box-shadow: 12px 12px rgba(7, 4, 16, 0.3);
    }
}
/*DESKTOP SCREEN: 1024px+*/
@media only screen and (min-width: 1024px){
    nav{
        gap: var(--spacing-lg-dt);
    }
    main{
        padding: var(--spacing-lg-dt);
    }
    section{
        flex-direction: row;
    }
    button p{
        width: 100%;
    }
    #card-1{
        flex: 100%;
        flex-direction: column;
    }
    #card-1 img{
        height: calc(var(--spacing-lg-dt) * 8); /*Image height returned whitespace when percentages was used, so this was used as an alternative.*/
        object-fit: cover;
    }
    #card-1 button p{
        width: 50%;
    }
    #card-4{
        flex: 100%;
        flex-direction: row;
    }
    #card-4 > article{
        width: 100%;
    }
    #card-5{
        flex: 100%;
        flex-direction: row;
    }
    #card-5 > article{
        width: 100%;
    }
    #card-6{
        flex: 100%;
        flex-direction: row;
    }
    #card-6 > article{
        width: 100%;
    }
}